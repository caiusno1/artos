name: Unity Builds

on:
  release:
    types: [published]

jobs:
  VRTOJ-build:
    name: VRTOJ Build Routine
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: TOJ-Implementations/VRTOJ/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build ARTOJ
        uses: game-ci/unity-builder@v2
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: TOJ-Implementations/VRTOJ
          targetPlatform: Android

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: VRTOJ
          path: build

      # Return License
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()
  RTOJ-build:
    name: RTOJ Build Routine
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: TOJ-Implementations/RTOJ/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build RTOJ
        uses: game-ci/unity-builder@v2
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: TOJ-Implementations/RTOJ
          targetPlatform: Android

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: RTOJ
          path: build

      # Return License
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()
  winbuild:
    name: Build for HoloLens
    runs-on: windows-2019
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      # Cache
      - uses: actions/cache@v2
        with:
          path: TOJ-Implementations/ARTOJ/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
  
      # Build
      - name: Build ARTOJ
        uses: game-ci/unity-builder@v2
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: TOJ-Implementations/ARTOJ
          targetPlatform: WSAPlayer
  
      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: ARTOJ
          path: build
  
      # Return License
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()

version: "3"


networks:
  proxy:
    external: true
  internal:
    external: false

services:

  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    networks:
      - proxy
    restart: always
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesResolvers.letsencrypt.acme.email=kbiermeier1@web.de"
      - "--certificatesResolvers.letsencrypt.acme.storage=/volume/acme.json"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web"
      - "--certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "traefik-volume:/volume"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  artosdb:
    image: "mysql"
    container_name: "artosdb"
    networks:
      - internal
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWD}
      MYSQL_DATABASE: ${DB_NAME}
  artosapi:
    build: "./artos-api"
    container_name: "artosapi"
    networks:
      - internal
      - proxy
    environment:
      DB_TYPE: ${DB_TYPE}
      DB_HOST: artosdb
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWD: ${DB_PASSWD}
      DB_NAME: ${DB_NAME}
      MODE: ${MODE}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.artosapi.rule=Host(`artosapi.${DOMAIN}`)"
      - "traefik.http.routers.artosapi.tls=true"
      - "traefik.http.routers.artosapi.tls.certresolver=letsencrypt"
      - "traefik.http.routers.artosapi.middlewares=artosapi-redir"
      - "traefik.http.middlewares.artosapi-redir.redirectscheme.scheme=https"
      - "traefik.http.middlewares.artosapi-redir.redirectscheme.permanent=true"
      - "traefik.http.routers.artosapi.middlewares=testheader"
      - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,HEAD"
      - "traefik.http.middlewares.testheader.headers.accesscontrolalloworigin=*"
      - "traefik.docker.network=proxy"
      - "traefik.port=8000"
  artosfrontend:
    build: "./artos-frontend"
    container_name: "artosfrontend"
    networks:
      - proxy
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.artosfrontend.rule=Host(`artos.${DOMAIN}`)"
      - "traefik.http.routers.artosfrontend.tls=true"
      - "traefik.http.routers.artosfrontend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.artosfrontend.middlewares=artosfrontend-redir"
      - "traefik.http.middlewares.artosfrontend-redir.redirectscheme.scheme=https"
      - "traefik.http.middlewares.artosfrontend-redir.redirectscheme.permanent=true"
      - "traefik.docker.network=proxy"

volumes:
  traefik-volume:
  postgres_data_volume:
